<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AudioAndVideoBestYouTubeQuality" xml:space="preserve">
    <value>Audio i wideo 		 Najlepsza jakość YouTube</value>
  </data>
  <data name="AudioQualityAcceptable" xml:space="preserve">
    <value>Jakość: akceptowalna 	 Średni bitrate: 115 kbit/s, zakres bitrate: 100-130 kbit/s, kompresja stratna VBR mp3</value>
  </data>
  <data name="AudioQualityAudioBook" xml:space="preserve">
    <value>Jakość: książka audio 	 Średni bitrate: 100 kbit/s, zakres bitrate: 080-120 kbit/s, kompresja stratna VBR mp3</value>
  </data>
  <data name="AudioQualityBest" xml:space="preserve">
    <value>Jakość: najlepsza 		 Średni bitrate: 245 kbit/s, zakres bitrate: 220-260 kbit/s, kompresja stratna VBR mp3 (duży rozmiar pliku mp3)</value>
  </data>
  <data name="AudioQualityBetter" xml:space="preserve">
    <value>Jakość: lepsza 		 Średni bitrate: 225 kbit/s, zakres bitrate: 190-250 kbit/s, kompresja stratna VBR mp3</value>
  </data>
  <data name="AudioQualityGood" xml:space="preserve">
    <value>Jakość: dobra 		 Średni bitrate: 130 kbit/s, zakres bitrate: 120-150 kbit/s, kompresja stratna VBR mp3</value>
  </data>
  <data name="AudioQualityOptimal" xml:space="preserve">
    <value>Jakość: optymalna 	 Średni bitrate: 190 kbit/s, zakres bitrate: 170-210 kbit/s, kompresja stratna VBR mp3</value>
  </data>
  <data name="AudioQualityRawAac" xml:space="preserve">
    <value>Jakość: surowy aac 	 AAC (m4a) nieprzetworzony</value>
  </data>
  <data name="AudioQualityRawOpus" xml:space="preserve">
    <value>Jakość: surowy opus 	 Opus nieprzetworzony</value>
  </data>
  <data name="AudioQualityRawVorbis" xml:space="preserve">
    <value>Jakość: surowy vorbis 	 Vorbis nieprzetworzone</value>
  </data>
  <data name="AudioQualityRawWebm" xml:space="preserve">
    <value>Jakość: surowy webm 	 WebM (Opus) nieprzetworzony</value>
  </data>
  <data name="AudioQualitySuperb" xml:space="preserve">
    <value>Jakość: doskonała 	 bezstratna kompresja FLAC (największy rozmiar pliku FLAC)</value>
  </data>
  <data name="AudioQualityTransparent" xml:space="preserve">
    <value>Jakość: przeźroczysta 	 Średni bitrate: 165 kbit/s, zakres bitrate: 140-185 kbit/s, kompresja stratna VBR mp3 (zrównoważony rozmiar pliku mp3)</value>
  </data>
  <data name="AudioQualityVeryGood" xml:space="preserve">
    <value>Jakość: bardzo dobra 	 Średni bitrate: 175 kbit/s, zakres bitrate: 150-195 kbit/s, kompresja stratna VBR mp3</value>
  </data>
  <data name="AudioQualityWorse" xml:space="preserve">
    <value>Jakość: gorsza 		 Średni bitrate: 085 kbit/s, zakres bitrate: 070-105 kbit/s, kompresja stratna VBR mp3</value>
  </data>
  <data name="AudioQualityWorst" xml:space="preserve">
    <value>Jakość: najgorsza 		 Średni bitrate: 065 kbit/s, zakres bitrate: 045-085 kbit/s, kompresja stratna VBR mp3 (najmniejszy rozmiar pliku mp3)</value>
  </data>
  <data name="ButtonContentCancel" xml:space="preserve">
    <value>Anuluj</value>
  </data>
  <data name="ButtonContentDownload" xml:space="preserve">
    <value>Pobierz</value>
  </data>
  <data name="ButtonToolTip" xml:space="preserve">
    <value>Naciśnij przycisk Pobierz, aby pobrać plik</value>
  </data>
  <data name="ComboBoxInitial" xml:space="preserve">
    <value>Po wklejeniu linku z YouTube można wybrać jakość dźwięku z tej listy</value>
  </data>
  <data name="StandardOutputEmptyLink" xml:space="preserve">
    <value>Pusty link</value>
  </data>
  <data name="StandardOutputReady" xml:space="preserve">
    <value>Gotowy</value>
  </data>
  <data name="StandardOutputRetrievingQuality" xml:space="preserve">
    <value>Pobieranie jakości</value>
  </data>
  <data name="TextBoxContentInitial" xml:space="preserve">
    <value>Audio i wideo 		 Najlepsza jakość</value>
  </data>
  <data name="TextBoxInitial" xml:space="preserve">
    <value>Wklej link i naciśnij przycisk Enter lub Pobierz</value>
  </data>
  <data name="TextBoxYouTubeInitial" xml:space="preserve">
    <value>Wklej link z YouTube i naciśnij przycisk Enter lub Pobierz</value>
  </data>
  <data name="WindowTitle" xml:space="preserve">
    <value>Audio Downloader PL</value>
  </data>
</root>